@* This content should be placed inside Views/Appointment/Index.cshtml *@
@model EHRsystem.Controllers.AppointmentController.AppointmentIndexViewModel

@{
    ViewData["Title"] = "Appointments";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Ensure this uses your consistent layout
}

<div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-extrabold text-gray-800 mb-8">
        Appointments Overview
        @if (Model.UserRole == "Doctor")
        {
            <span class="text-blue-600"> (Doctor View)</span>
        }
        else if (Model.UserRole == "Patient")
        {
            <span class="text-green-600"> (Patient View)</span>
        }
    </h1>

    <div class="bg-white p-6 rounded-xl shadow-lg mb-8">
        <form asp-action="Index" method="get" class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end">
            <div>
                <label for="searchString" class="block text-gray-700 text-sm font-semibold mb-2">Search</label>
                <input type="text" name="searchString" id="searchString" value="@Model.SearchString" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Patient/Doctor/Reason" />
            </div>
            <div>
                <label for="statusFilter" class="block text-gray-700 text-sm font-semibold mb-2">Status</label>
                <select name="statusFilter" id="statusFilter" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="">All Statuses</option>
                    @foreach (var status in Enum.GetNames(typeof(EHRsystem.Models.Enums.AppointmentStatus)))
                    {
                        <option value="@status" selected="@(status == Model.StatusFilter)">@status</option>
                    }
                </select>
            </div>
            <div>
                <label for="dateFilter" class="block text-gray-700 text-sm font-semibold mb-2">Date</label>
                <input type="date" name="dateFilter" id="dateFilter" value="@(Model.DateFilter?.ToString("yyyy-MM-dd"))" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" />
            </div>
            <div class="flex gap-2">
                <button type="submit" class="btn-primary flex-1">Filter</button>
                <a asp-action="Index" class="btn-outline-white-custom border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white flex-1 text-center py-2 px-3 rounded-lg">Clear</a>
            </div>
        </form>
    </div>

    @if (!User.IsInRole("Doctor") && !User.IsInRole("Patient"))
    {
        <div class="flex justify-end mb-6">
            <a asp-action="Create" class="btn-primary">Create New Appointment</a>
        </div>
    }

    @if (Model.Appointments == null || !Model.Appointments.Any())
    {
        <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 rounded-lg" role="alert">
            <p class="font-bold">No Appointments Found</p>
            <p>There are no appointments matching your criteria.</p>
        </div>
    }
    else
    {
        <div class="overflow-x-auto bg-white rounded-xl shadow-lg">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date & Time</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Patient</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Doctor</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Reason</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var item in Model.Appointments)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                @item.AppointmentDate.ToString("yyyy-MM-dd HH:mm")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                @(item.Patient != null ? $"{item.Patient.FirstName} {item.Patient.LastName}" : "N/A")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                @(item.Doctor != null ? $"Dr. {item.Doctor.FirstName} {item.Doctor.LastName}" : "N/A")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                @item.Reason
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
                                    @(item.Status == EHRsystem.Models.Enums.AppointmentStatus.Scheduled ? "bg-blue-100 text-blue-800" :
                                      item.Status == EHRsystem.Models.Enums.AppointmentStatus.Completed ? "bg-green-100 text-green-800" :
                                      item.Status == EHRsystem.Models.Enums.AppointmentStatus.Cancelled ? "bg-red-100 text-red-800" : "bg-gray-100 text-gray-800")">
                                    @item.Status.ToString()
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <a asp-action="Details" asp-route-id="@item.Id" class="text-indigo-600 hover:text-indigo-900 mr-4">Details</a>
                                @if (User.IsInRole("Admin") || (User.IsInRole("Doctor") && item.Doctor?.UserId == _userManager.GetUserId(User)))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="text-blue-600 hover:text-blue-900 mr-4">Edit</a>
                                }
                                @if (User.IsInRole("Admin"))
                                {
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="text-red-600 hover:text-red-900">Delete</a>
                                }
                                @if ((User.IsInRole("Patient") && item.Patient?.UserId == _userManager.GetUserId(User)) || (User.IsInRole("Doctor") && item.Doctor?.UserId == _userManager.GetUserId(User)))
                                {
                                    @if (item.Status == EHRsystem.Models.Enums.AppointmentStatus.Scheduled)
                                    {
                                        <button type="button" class="text-orange-600 hover:text-orange-900 ml-4 cancel-button" data-id="@item.Id">Cancel</button>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav class="flex justify-between items-center px-4 py-3 bg-white border-t border-gray-200 sm:px-6 rounded-b-xl shadow-lg mt-8">
            <div class="flex-1 flex justify-between sm:hidden">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString" asp-route-statusFilter="@Model.StatusFilter" asp-route-dateFilter="@(Model.DateFilter?.ToString("yyyy-MM-dd"))"
                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 @(Model.PageNumber <= 1 ? "opacity-50 cursor-not-allowed" : "")">
                    Previous
                </a>
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString" asp-route-statusFilter="@Model.StatusFilter" asp-route-dateFilter="@(Model.DateFilter?.ToString("yyyy-MM-dd"))"
                   class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 @(Model.PageNumber >= Model.TotalPages ? "opacity-50 cursor-not-allowed" : "")">
                    Next
                </a>
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing <span class="font-medium">@(((Model.PageNumber - 1) * Model.PageSize) + 1)</span>
                        to <span class="font-medium">@(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalAppointments))</span>
                        of <span class="font-medium">@Model.TotalAppointments</span> results
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString" asp-route-statusFilter="@Model.StatusFilter" asp-route-dateFilter="@(Model.DateFilter?.ToString("yyyy-MM-dd"))"
                           class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 @(Model.PageNumber <= 1 ? "opacity-50 cursor-not-allowed" : "")">
                            <span class="sr-only">Previous</span>
                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                            </svg>
                        </a>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <a asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString" asp-route-statusFilter="@Model.StatusFilter" asp-route-dateFilter="@(Model.DateFilter?.ToString("yyyy-MM-dd"))"
                               class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium @(i == Model.PageNumber ? "bg-blue-600 text-white" : "bg-white text-gray-700 hover:bg-gray-50")">
                                @i
                            </a>
                        }
                        <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Model.SearchString" asp-route-statusFilter="@Model.StatusFilter" asp-route-dateFilter="@(Model.DateFilter?.ToString("yyyy-MM-dd"))"
                           class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 @(Model.PageNumber >= Model.TotalPages ? "opacity-50 cursor-not-allowed" : "")">
                            <span class="sr-only">Next</span>
                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </nav>
                </div>
            </div>
        </nav>
    }
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.cancel-button').forEach(button => {
            button.addEventListener('click', function() {
                const appointmentId = this.dataset.id;
                const reason = prompt('Please enter a reason for cancellation:');
                if (reason) {
                    if (confirm('Are you sure you want to cancel this appointment?')) {
                        const form = document.createElement('form');
                        form.method = 'post';
                        form.action = '/Appointment/Cancel/' + appointmentId;
                        form.style.display = 'none';

                        const idInput = document.createElement('input');
                        idInput.type = 'hidden';
                        idInput.name = 'id';
                        idInput.value = appointmentId;
                        form.appendChild(idInput);

                        const reasonInput = document.createElement('input');
                        reasonInput.type = 'hidden';
                        reasonInput.name = 'cancellationReason';
                        reasonInput.value = reason;
                        form.appendChild(reasonInput);

                        // Add anti-forgery token
                        const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]');
                        if (antiForgeryToken) {
                            form.appendChild(antiForgeryToken.cloneNode(true));
                        } else {
                            console.error("Anti-forgery token not found. Please ensure it's in your form or _Layout.cshtml.");
                        }

                        document.body.appendChild(form);
                        form.submit();
                    }
                }
            });
        });
    </script>
}
